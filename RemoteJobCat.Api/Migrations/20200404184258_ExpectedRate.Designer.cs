// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RemoteJobCat.Api.Data;

namespace RemoteJobCat.Api.Migrations
{
    [DbContext(typeof(RemoteJobCatApiContext))]
    [Migration("20200404184258_ExpectedRate")]
    partial class ExpectedRate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("RemoteJobCat.Api.Models.Employee", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<int>("ApprovedCount")
                        .HasColumnType("int");

                    b.Property<int>("CoutryCode")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ExpectedRateId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Experience")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsBlocked")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LinkedInProfileUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Phone")
                        .HasColumnType("int");

                    b.Property<int>("RejectedCount")
                        .HasColumnType("int");

                    b.Property<string>("ShortSelfIntroduction")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ExpectedRateId");

                    b.ToTable("Employee");
                });

            modelBuilder.Entity("RemoteJobCat.Api.Models.InternalRecommendation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("EmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RecommendatorEmployee")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RecommendedEmployee")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("InternalRecommendation");
                });

            modelBuilder.Entity("RemoteJobCat.Api.Models.Rate", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("CurrencyCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PaymentPeriod")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Rate");
                });

            modelBuilder.Entity("RemoteJobCat.Api.Models.Recommendation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("EmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Recommendation");
                });

            modelBuilder.Entity("RemoteJobCat.Api.Models.Employee", b =>
                {
                    b.HasOne("RemoteJobCat.Api.Models.Rate", "ExpectedRate")
                        .WithMany()
                        .HasForeignKey("ExpectedRateId");
                });

            modelBuilder.Entity("RemoteJobCat.Api.Models.InternalRecommendation", b =>
                {
                    b.HasOne("RemoteJobCat.Api.Models.Employee", null)
                        .WithMany("InternalRecommendations")
                        .HasForeignKey("EmployeeId");
                });

            modelBuilder.Entity("RemoteJobCat.Api.Models.Recommendation", b =>
                {
                    b.HasOne("RemoteJobCat.Api.Models.Employee", null)
                        .WithMany("Recommendations")
                        .HasForeignKey("EmployeeId");
                });
#pragma warning restore 612, 618
        }
    }
}
